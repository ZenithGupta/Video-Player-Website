# .github/workflows/deploy-gcp.yml
name: Deploy to GCP VM

on:
  push:
    branches:
      - Deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'  # For auth

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v3
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Deploy to VM
        uses: google-github-actions/ssh-compute@v2
        with:
          instance_name: '${{ secrets.VM_INSTANCE_NAME }}'
          zone: '${{ secrets.VM_ZONE }}'
          project_id: '${{ secrets.GCP_PROJECT_ID }}'
          ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
          command: |
            set -e

            # Install essential tools if not present (assumes Debian/Ubuntu-based VM)
            echo "Installing dependencies..."
            sudo apt-get update
            sudo apt-get install -y git docker.io python3 python3-pip nodejs npm
            # Install docker-compose
            if ! command -v docker-compose >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            # Ensure Docker service is running
            sudo systemctl enable docker
            sudo systemctl start docker

            # Clone or update repository
            cd ~
            if [ -d "Video-Player-Website" ]; then
              cd Video-Player-Website
              git pull
            else
              git clone https://github.com/${{ github.repository }}.git
              cd Video-Player-Website
            fi

            echo "Building and deploying services..."
            sudo docker compose up --build -d

            echo "Pruning old Docker images to save space..."
            sudo docker image prune -af